Add-Type -AssemblyName System.Windows.Forms
Add-Type -AssemblyName System.Drawing

# יצירת הטופס הראשי
$form = New-Object System.Windows.Forms.Form
$form.Text = "כלי להקטנת תמונות"
$form.Size = New-Object System.Drawing.Size(700, 550)
$form.StartPosition = "CenterScreen"
$form.Font = New-Object System.Drawing.Font("Segoe UI", 10)
$form.RightToLeft = [System.Windows.Forms.RightToLeft]::Yes # תמיכה בעברית
$form.AllowDrop = $true # הפעלת תמיכה בגרירה ושחרור

# יצירת כפתור לבחירת תמונה
$btnSelectImage = New-Object System.Windows.Forms.Button
$btnSelectImage.Location = New-Object System.Drawing.Point(450, 20)
$btnSelectImage.Size = New-Object System.Drawing.Size(120, 30)
$btnSelectImage.Text = "בחר תמונה"
$form.Controls.Add($btnSelectImage)

# תיבת טקסט להצגת נתיב הקובץ
$txtImagePath = New-Object System.Windows.Forms.TextBox
$txtImagePath.Location = New-Object System.Drawing.Point(20, 20)
$txtImagePath.Size = New-Object System.Drawing.Size(420, 30)
$txtImagePath.ReadOnly = $true
$form.Controls.Add($txtImagePath)

# תווית לרוחב בפיקסלים
$lblWidth = New-Object System.Windows.Forms.Label
$lblWidth.Location = New-Object System.Drawing.Point(540, 70)
$lblWidth.Size = New-Object System.Drawing.Size(100, 30)
$lblWidth.Text = "רוחב (פיקסל):"
$form.Controls.Add($lblWidth)

# תיבת טקסט לרוחב
$txtWidth = New-Object System.Windows.Forms.TextBox
$txtWidth.Location = New-Object System.Drawing.Point(450, 70)
$txtWidth.Size = New-Object System.Drawing.Size(100, 30)
$form.Controls.Add($txtWidth)

# תווית לרוחב בסנטימטרים
$lblWidthCm = New-Object System.Windows.Forms.Label
$lblWidthCm.Location = New-Object System.Drawing.Point(540, 115)
$lblWidthCm.Size = New-Object System.Drawing.Size(100, 30)
$lblWidthCm.Text = "רוחב (ס״מ):"
$form.Controls.Add($lblWidthCm)

# תיבת טקסט לרוחב בסנטימטרים
$txtWidthCm = New-Object System.Windows.Forms.TextBox
$txtWidthCm.Location = New-Object System.Drawing.Point(450, 115)
$txtWidthCm.Size = New-Object System.Drawing.Size(100, 30)
$form.Controls.Add($txtWidthCm)

# תווית לגובה בפיקסלים
$lblHeight = New-Object System.Windows.Forms.Label
$lblHeight.Location = New-Object System.Drawing.Point(350, 70)
$lblHeight.Size = New-Object System.Drawing.Size(100, 30)
$lblHeight.Text = "גובה (פיקסל):"
$form.Controls.Add($lblHeight)

# תיבת טקסט לגובה
$txtHeight = New-Object System.Windows.Forms.TextBox
$txtHeight.Location = New-Object System.Drawing.Point(260, 70)
$txtHeight.Size = New-Object System.Drawing.Size(100, 30)
$form.Controls.Add($txtHeight)

# תווית לגובה בסנטימטרים
$lblHeightCm = New-Object System.Windows.Forms.Label
$lblHeightCm.Location = New-Object System.Drawing.Point(350, 115)
$lblHeightCm.Size = New-Object System.Drawing.Size(100, 30)
$lblHeightCm.Text = "גובה (ס״מ):"
$form.Controls.Add($lblHeightCm)

# תיבת טקסט לגובה בסנטימטרים
$txtHeightCm = New-Object System.Windows.Forms.TextBox
$txtHeightCm.Location = New-Object System.Drawing.Point(260, 115)
$txtHeightCm.Size = New-Object System.Drawing.Size(100, 30)
$form.Controls.Add($txtHeightCm)

# תווית ל-DPI
$lblDpi = New-Object System.Windows.Forms.Label
$lblDpi.Location = New-Object System.Drawing.Point(210, 70)
$lblDpi.Size = New-Object System.Drawing.Size(40, 25)
$lblDpi.Text = "DPI:"
$form.Controls.Add($lblDpi)

# קומבו בוקס ל-DPI
$comboDpi = New-Object System.Windows.Forms.ComboBox
$comboDpi.Location = New-Object System.Drawing.Point(150, 70)
$comboDpi.Size = New-Object System.Drawing.Size(60, 25)
$comboDpi.DropDownStyle = [System.Windows.Forms.ComboBoxStyle]::DropDownList
$comboDpi.Items.AddRange(@("72", "96", "150", "300"))
$comboDpi.SelectedIndex = 1  # ברירת מחדל היא 96 DPI
$form.Controls.Add($comboDpi)

# תיבת סימון לנעילת יחס XY
$chkLockRatio = New-Object System.Windows.Forms.CheckBox
$chkLockRatio.Location = New-Object System.Drawing.Point(100, 115)
$chkLockRatio.Size = New-Object System.Drawing.Size(150, 30)
$chkLockRatio.Text = "נעל יחס גובה-רוחב"
$chkLockRatio.Checked = $true
$form.Controls.Add($chkLockRatio)

# תווית לאיכות
$lblQuality = New-Object System.Windows.Forms.Label
$lblQuality.Location = New-Object System.Drawing.Point(100, 70)
$lblQuality.Size = New-Object System.Drawing.Size(40, 25)
$lblQuality.Text = "איכות:"
$form.Controls.Add($lblQuality)

# מחוון לאיכות
$trackQuality = New-Object System.Windows.Forms.TrackBar
$trackQuality.Location = New-Object System.Drawing.Point(20, 70)
$trackQuality.Size = New-Object System.Drawing.Size(80, 45)
$trackQuality.Minimum = 1
$trackQuality.Maximum = 100
$trackQuality.Value = 80
$trackQuality.TickFrequency = 10
$form.Controls.Add($trackQuality)

# תווית להצגת ערך האיכות
$lblQualityValue = New-Object System.Windows.Forms.Label
$lblQualityValue.Location = New-Object System.Drawing.Point(40, 115)
$lblQualityValue.Size = New-Object System.Drawing.Size(60, 25)
$lblQualityValue.Text = "80%"
$form.Controls.Add($lblQualityValue)

# יצירת קופסת תצוגה לתמונה המקורית
$lblOriginalImage = New-Object System.Windows.Forms.Label
$lblOriginalImage.Location = New-Object System.Drawing.Point(450, 145)
$lblOriginalImage.Size = New-Object System.Drawing.Size(120, 25)
$lblOriginalImage.Text = "תמונה מקורית:"
$form.Controls.Add($lblOriginalImage)

$picBoxOriginal = New-Object System.Windows.Forms.PictureBox
$picBoxOriginal.Location = New-Object System.Drawing.Point(20, 170)
$picBoxOriginal.Size = New-Object System.Drawing.Size(270, 250)
$picBoxOriginal.SizeMode = [System.Windows.Forms.PictureBoxSizeMode]::Zoom
$picBoxOriginal.AllowDrop = $true # הפעלת תמיכה בגרירה ושחרור
$form.Controls.Add($picBoxOriginal)

# הוספת תווית עם הנחיה לגרירת תמונה
$lblDragDrop = New-Object System.Windows.Forms.Label
$lblDragDrop.Location = New-Object System.Drawing.Point(20, 170)
$lblDragDrop.Size = New-Object System.Drawing.Size(270, 250)
$lblDragDrop.Text = "גרור תמונה לכאן"
$lblDragDrop.TextAlign = [System.Drawing.ContentAlignment]::MiddleCenter
$lblDragDrop.BorderStyle = [System.Windows.Forms.BorderStyle]::FixedSingle
$lblDragDrop.BackColor = [System.Drawing.Color]::LightGray
$form.Controls.Add($lblDragDrop)

# יצירת קופסת תצוגה לתמונה המוקטנת
$lblResizedImage = New-Object System.Windows.Forms.Label
$lblResizedImage.Location = New-Object System.Drawing.Point(230, 145)
$lblResizedImage.Size = New-Object System.Drawing.Size(120, 25)
$lblResizedImage.Text = "תצוגה מקדימה:"
$form.Controls.Add($lblResizedImage)

$picBoxResized = New-Object System.Windows.Forms.PictureBox
$picBoxResized.Location = New-Object System.Drawing.Point(300, 170)
$picBoxResized.Size = New-Object System.Drawing.Size(270, 250)
$picBoxResized.SizeMode = [System.Windows.Forms.PictureBoxSizeMode]::Zoom
$form.Controls.Add($picBoxResized)

# תווית להצגת גודל הקובץ המקורי
$lblOriginalSize = New-Object System.Windows.Forms.Label
$lblOriginalSize.Location = New-Object System.Drawing.Point(20, 430)
$lblOriginalSize.Size = New-Object System.Drawing.Size(270, 25)
$lblOriginalSize.Text = "גודל מקורי: "
$form.Controls.Add($lblOriginalSize)

# תווית להצגת גודל הקובץ החדש (תצוגה מקדימה)
$lblNewSize = New-Object System.Windows.Forms.Label
$lblNewSize.Location = New-Object System.Drawing.Point(300, 430)
$lblNewSize.Size = New-Object System.Drawing.Size(270, 25)
$lblNewSize.Text = "גודל מוערך: "
$form.Controls.Add($lblNewSize)

# כפתור להקטנת התמונה ושמירה
$btnResize = New-Object System.Windows.Forms.Button
$btnResize.Location = New-Object System.Drawing.Point(450, 470)
$btnResize.Size = New-Object System.Drawing.Size(120, 30)
$btnResize.Text = "הקטן ושמור"
$btnResize.Enabled = $false
$form.Controls.Add($btnResize)

# משתנים גלובליים
$global:currentImage = $null
$global:originalFilePath = ""
$global:aspectRatio = 1.0  # יחס ברירת מחדל
$global:updatingControls = $false  # דגל למניעת לולאות אינסופיות בעדכון בקרות

# פונקציה להמרת פיקסלים לסנטימטרים
function ConvertPixelsToCm {
    param (
        [int]$pixels,
        [int]$dpi
    )
    
    # ההמרה: 1 אינץ' = 2.54 ס"מ, מספר פיקסלים / dpi = אינץ'
    $inches = $pixels / $dpi
    $cm = $inches * 2.54
    
    # עיגול ל-2 ספרות אחרי הנקודה
    return [math]::Round($cm, 2)
}

# פונקציה להמרת סנטימטרים לפיקסלים
function ConvertCmToPixels {
    param (
        [double]$cm,
        [int]$dpi
    )
    
    # ההמרה: 1 ס"מ = 0.3937 אינץ', אינץ' * dpi = מספר פיקסלים
    $inches = $cm / 2.54
    $pixels = [int]($inches * $dpi)
    
    return $pixels
}

# אירוע לעדכון ערך האיכות
$trackQuality.add_ValueChanged({
    $lblQualityValue.Text = "$($trackQuality.Value)%"
    Update-Preview
})

# אירוע לשינוי DPI
$comboDpi.add_SelectedIndexChanged({
    if ($global:updatingControls) { return }
    
    $global:updatingControls = $true
    
    # עדכון של שדות הסנטימטרים כאשר ה-DPI משתנה
    if ($txtWidth.Text -and $txtHeight.Text) {
        $width = [int]::Parse($txtWidth.Text)
        $height = [int]::Parse($txtHeight.Text)
        $dpi = [int]::Parse($comboDpi.SelectedItem)
        
        $widthCm = ConvertPixelsToCm -pixels $width -dpi $dpi
        $heightCm = ConvertPixelsToCm -pixels $height -dpi $dpi
        
        $txtWidthCm.Text = $widthCm.ToString()
        $txtHeightCm.Text = $heightCm.ToString()
    }
    
    $global:updatingControls = $false
    Update-Preview
})

# אירוע לעדכון אוטומטי של גובה ושדות סנטימטרים לפי רוחב
$txtWidth.add_TextChanged({
    if ($global:updatingControls) { return }
    
    $width = 0
    if ([int]::TryParse($txtWidth.Text, [ref]$width) -and $width -gt 0) {
        $global:updatingControls = $true
        
        # עדכון רוחב בסנטימטרים
        $dpi = [int]::Parse($comboDpi.SelectedItem)
        $widthCm = ConvertPixelsToCm -pixels $width -dpi $dpi
        $txtWidthCm.Text = $widthCm.ToString()
        
        # עדכון גובה בפיקסלים ובסנטימטרים, אם היחס נעול
        if ($chkLockRatio.Checked -and $global:aspectRatio -gt 0) {
            $height = [math]::Round($width / $global:aspectRatio)
            $heightCm = ConvertPixelsToCm -pixels $height -dpi $dpi
            
            $txtHeight.Text = $height.ToString()
            $txtHeightCm.Text = $heightCm.ToString()
        }
        
        $global:updatingControls = $false
        Update-Preview
    }
})

# אירוע לעדכון אוטומטי של רוחב ושדות סנטימטרים לפי גובה
$txtHeight.add_TextChanged({
    if ($global:updatingControls) { return }
    
    $height = 0
    if ([int]::TryParse($txtHeight.Text, [ref]$height) -and $height -gt 0) {
        $global:updatingControls = $true
        
        # עדכון גובה בסנטימטרים
        $dpi = [int]::Parse($comboDpi.SelectedItem)
        $heightCm = ConvertPixelsToCm -pixels $height -dpi $dpi
        $txtHeightCm.Text = $heightCm.ToString()
        
        # עדכון רוחב בפיקסלים ובסנטימטרים, אם היחס נעול
        if ($chkLockRatio.Checked -and $global:aspectRatio -gt 0) {
            $width = [math]::Round($height * $global:aspectRatio)
            $widthCm = ConvertPixelsToCm -pixels $width -dpi $dpi
            
            $txtWidth.Text = $width.ToString()
            $txtWidthCm.Text = $widthCm.ToString()
        }
        
        $global:updatingControls = $false
        Update-Preview
    }
})

# אירוע לעדכון אוטומטי של רוחב בפיקסלים לפי רוחב בסנטימטרים
$txtWidthCm.add_TextChanged({
    if ($global:updatingControls) { return }
    
    $widthCm = 0
    if ([double]::TryParse($txtWidthCm.Text, [ref]$widthCm) -and $widthCm -gt 0) {
        $global:updatingControls = $true
        
        # עדכון רוחב בפיקסלים
        $dpi = [int]::Parse($comboDpi.SelectedItem)
        $width = ConvertCmToPixels -cm $widthCm -dpi $dpi
        $txtWidth.Text = $width.ToString()
        
        # עדכון גובה בפיקסלים ובסנטימטרים, אם היחס נעול
        if ($chkLockRatio.Checked -and $global:aspectRatio -gt 0) {
            $height = [math]::Round($width / $global:aspectRatio)
            $heightCm = ConvertPixelsToCm -pixels $height -dpi $dpi
            
            $txtHeight.Text = $height.ToString()
            $txtHeightCm.Text = $heightCm.ToString()
        }
        
        $global:updatingControls = $false
        Update-Preview
    }
})

# אירוע לעדכון אוטומטי של גובה בפיקסלים לפי גובה בסנטימטרים
$txtHeightCm.add_TextChanged({
    if ($global:updatingControls) { return }
    
    $heightCm = 0
    if ([double]::TryParse($txtHeightCm.Text, [ref]$heightCm) -and $heightCm -gt 0) {
        $global:updatingControls = $true
        
        # עדכון גובה בפיקסלים
        $dpi = [int]::Parse($comboDpi.SelectedItem)
        $height = ConvertCmToPixels -cm $heightCm -dpi $dpi
        $txtHeight.Text = $height.ToString()
        
        # עדכון רוחב בפיקסלים ובסנטימטרים, אם היחס נעול
        if ($chkLockRatio.Checked -and $global:aspectRatio -gt 0) {
            $width = [math]::Round($height * $global:aspectRatio)
            $widthCm = ConvertPixelsToCm -pixels $width -dpi $dpi
            
            $txtWidth.Text = $width.ToString()
            $txtWidthCm.Text = $widthCm.ToString()
        }
        
        $global:updatingControls = $false
        Update-Preview
    }
})

# פונקציה לטיפול בקובץ תמונה
function Process-ImageFile {
    param (
        [string]$filePath
    )
    
    # וידוא שהקובץ קיים
    if (-not (Test-Path $filePath)) {
        return
    }
    
    # בדיקה שמדובר בקובץ תמונה
    $extension = [System.IO.Path]::GetExtension($filePath).ToLower()
    if ($extension -notin @(".jpg", ".jpeg", ".png", ".bmp", ".gif")) {
        [System.Windows.Forms.MessageBox]::Show("רק קבצי תמונה נתמכים (jpg, jpeg, png, bmp, gif)", "שגיאה", [System.Windows.Forms.MessageBoxButtons]::OK, [System.Windows.Forms.MessageBoxIcon]::Error)
        return
    }
    
    try {
        $txtImagePath.Text = $filePath
        $global:originalFilePath = $filePath
        $global:currentImage = [System.Drawing.Image]::FromFile($filePath)

        # עדכון תצוגה מקדימה
        $picBoxOriginal.Image = $global:currentImage
        
        # הסתרת תווית גרירה ושחרור
        $lblDragDrop.Visible = $false

        # חישוב יחס הגובה-רוחב
        $global:aspectRatio = $global:currentImage.Width / $global:currentImage.Height
        
        $global:updatingControls = $true
        
        # עדכון ערכי הפיקסלים
        $txtWidth.Text = $global:currentImage.Width.ToString()
        $txtHeight.Text = $global:currentImage.Height.ToString()
        
        # עדכון ערכי הסנטימטרים
        $dpi = [int]::Parse($comboDpi.SelectedItem)
        $widthCm = ConvertPixelsToCm -pixels $global:currentImage.Width -dpi $dpi
        $heightCm = ConvertPixelsToCm -pixels $global:currentImage.Height -dpi $dpi
        
        $txtWidthCm.Text = $widthCm.ToString()
        $txtHeightCm.Text = $heightCm.ToString()
        
        $global:updatingControls = $false

        # עדכון גודל הקובץ המקורי
        $lblOriginalSize.Text = "גודל מקורי: " + (Get-FileSizeInMB $filePath) + " MB"

        # עדכון תצוגה של תצוגה מקדימה עם גודל התמונה הנוכחי
        Update-Preview

        # הפעלת כפתור השמירה
        $btnResize.Enabled = $true
    }
    catch {
        [System.Windows.Forms.MessageBox]::Show("שגיאה בטעינת הקובץ: " + $_.Exception.Message, "שגיאה", [System.Windows.Forms.MessageBoxButtons]::OK, [System.Windows.Forms.MessageBoxIcon]::Error)
    }
}

# פונקציה לעדכון התצוגה המקדימה
function Update-Preview {
    if ($global:currentImage) {
        $width = 0
        $height = 0
        
        # בדיקה שהערכים הם מספרים תקינים
        if ([int]::TryParse($txtWidth.Text, [ref]$width) -and [int]::TryParse($txtHeight.Text, [ref]$height) -and $width -gt 0 -and $height -gt 0) {
            $quality = $trackQuality.Value
            
            # יצירת תצוגה מקדימה
            try {
                $previewImage = Resize-Image -filePath $global:originalFilePath -width $width -height $height -quality $quality
                $picBoxResized.Image = $previewImage
                
                # הערכת גודל הקובץ לאחר ההקטנה
                $originalSize = (Get-Item $global:originalFilePath).Length
                $estimatedSize = $originalSize * ($width * $height) / ($global:currentImage.Width * $global:currentImage.Height) * ($quality / 100)
                $lblNewSize.Text = "גודל מוערך: " + [math]::Round($estimatedSize / 1MB, 2) + " MB"
            }
            catch {
                # טיפול בשגיאות תצוגה מקדימה
                $lblNewSize.Text = "גודל מוערך: לא זמין"
            }
        }
    }
}

# פונקציה להצגת גודל קובץ במגה-בייט
function Get-FileSizeInMB($filePath) {
    $fileInfo = Get-Item $filePath
    return [math]::Round($fileInfo.Length / 1MB, 2)
}

# פונקציה להקטנת תמונה ושמירה
function Resize-Image {
    param (
        [string]$filePath,
        [int]$width,
        [int]$height,
        [int]$quality
    )

    $image = [System.Drawing.Image]::FromFile($filePath)
    $newImage = New-Object System.Drawing.Bitmap($width, $height)
    $graphics = [System.Drawing.Graphics]::FromImage($newImage)
    
    # שיפור איכות התמונה המוקטנת
    $graphics.InterpolationMode = [System.Drawing.Drawing2D.InterpolationMode]::HighQualityBicubic
    $graphics.SmoothingMode = [System.Drawing.Drawing2D.SmoothingMode]::HighQuality
    $graphics.PixelOffsetMode = [System.Drawing.Drawing2D.PixelOffsetMode]::HighQuality
    $graphics.CompositingQuality = [System.Drawing.Drawing2D.CompositingQuality]::HighQuality
    
    # ציור התמונה המוקטנת
    $graphics.DrawImage($image, (New-Object System.Drawing.Rectangle(0, 0, $width, $height)))
    
    # שחרור משאבים
    $graphics.Dispose()
    
    return $newImage
}

# אירועי גרירה ושחרור למסגרת

# אירוע כאשר קובץ נגרר מעל הטופס
$form.add_DragEnter({
    if ($_.Data.GetDataPresent([System.Windows.Forms.DataFormats]::FileDrop)) {
        $_.Effect = [System.Windows.Forms.DragDropEffects]::Copy
    }
    else {
        $_.Effect = [System.Windows.Forms.DragDropEffects]::None
    }
})

# אירוע כאשר קובץ משוחרר על הטופס
$form.add_DragDrop({
    $files = $_.Data.GetData([System.Windows.Forms.DataFormats]::FileDrop)
    if ($files.Length -gt 0) {
        Process-ImageFile -filePath $files[0]
    }
})

# אירועי גרירה ושחרור לתיבת התמונה

# אירוע כאשר קובץ נגרר מעל תיבת התמונה
$picBoxOriginal.add_DragEnter({
    if ($_.Data.GetDataPresent([System.Windows.Forms.DataFormats]::FileDrop)) {
        $_.Effect = [System.Windows.Forms.DragDropEffects]::Copy
    }
    else {
        $_.Effect = [System.Windows.Forms.DragDropEffects]::None
    }
})

# אירוע כאשר קובץ משוחרר על תיבת התמונה
$picBoxOriginal.add_DragDrop({
    $files = $_.Data.GetData([System.Windows.Forms.DataFormats]::FileDrop)
    if ($files.Length -gt 0) {
        Process-ImageFile -filePath $files[0]
    }
})

# אירועי גרירה ושחרור לתווית הגרירה

# אירוע כאשר קובץ נגרר מעל התווית
$lblDragDrop.add_DragEnter({
    if ($_.Data.GetDataPresent([System.Windows.Forms.DataFormats]::FileDrop)) {
        $_.Effect = [System.Windows.Forms.DragDropEffects]::Copy
        $lblDragDrop.BackColor = [System.Drawing.Color]::LightBlue
    }
    else {
        $_.Effect = [System.Windows.Forms.DragDropEffects]::None
    }
})

# אירוע כאשר גרירה יוצאת מהתווית
$lblDragDrop.add_DragLeave({
    $lblDragDrop.BackColor = [System.Drawing.Color]::LightGray
})

# אירוע כאשר קובץ משוחרר על התווית
$lblDragDrop.add_DragDrop({
    $lblDragDrop.BackColor = [System.Drawing.Color]::LightGray
    $files = $_.Data.GetData([System.Windows.Forms.DataFormats]::FileDrop)
    if ($files.Length -gt 0) {
        Process-ImageFile -filePath $files[0]
    }
})

# כפתור לבחירת תמונה
$btnSelectImage.Add_Click({
    $fileDialog = New-Object System.Windows.Forms.OpenFileDialog
    $fileDialog.Filter = "תמונות (*.jpg, *.jpeg, *.png, *.bmp, *.gif)|*.jpg;*.jpeg;*.png;*.bmp;*.gif"
    $result = $fileDialog.ShowDialog()

    if ($result -eq [System.Windows.Forms.DialogResult]::OK) {
        Process-ImageFile -filePath $fileDialog.FileName
    }
})



# כפתור הקטנה ושמירה
$btnResize.Add_Click({
    $width = 0
    $height = 0
    
    # בדיקה שהערכים הם מספרים תקינים
    if ([int]::TryParse($txtWidth.Text, [ref]$width) -and [int]::TryParse($txtHeight.Text, [ref]$height) -and $width -gt 0 -and $height -gt 0) {
        $quality = $trackQuality.Value
        
        $saveDialog = New-Object System.Windows.Forms.SaveFileDialog
        $saveDialog.Filter = "תמונות JPEG (*.jpg)|*.jpg|PNG תמונות (*.png)|*.png|BMP תמונות (*.bmp)|*.bmp"
        $saveDialog.FileName = [System.IO.Path]::GetFileNameWithoutExtension($global:originalFilePath) + "_מוקטן"
        
        if ($saveDialog.ShowDialog() -eq [System.Windows.Forms.DialogResult]::OK) {
            try {
                # יצירת עותק של התמונה המקורית במקום שימוש ישיר בה
                $sourceBitmap = New-Object System.Drawing.Bitmap($global:originalFilePath)
                
                # הפעלת תהליך הקטנה על העותק
                $newImage = New-Object System.Drawing.Bitmap($width, $height)
                $graphics = [System.Drawing.Graphics]::FromImage($newImage)
                
                # שיפור איכות התמונה המוקטנת
                $graphics.InterpolationMode = [System.Drawing.Drawing2D.InterpolationMode]::HighQualityBicubic
                $graphics.SmoothingMode = [System.Drawing.Drawing2D.SmoothingMode]::HighQuality
                $graphics.PixelOffsetMode = [System.Drawing.Drawing2D.PixelOffsetMode]::HighQuality
                $graphics.CompositingQuality = [System.Drawing.Drawing2D.CompositingQuality]::HighQuality
                
                # ציור התמונה המוקטנת
                $graphics.DrawImage($sourceBitmap, (New-Object System.Drawing.Rectangle(0, 0, $width, $height)))
                
                # שחרור משאבים
                $graphics.Dispose()
                $sourceBitmap.Dispose()
                
                # זיהוי פורמט השמירה לפי סיומת הקובץ
                $extension = [System.IO.Path]::GetExtension($saveDialog.FileName).ToLower()
                
                # שמירת התמונה בפורמט המתאים
                if ($extension -eq ".jpg" -or $extension -eq ".jpeg") {
                    $encoder = [System.Drawing.Imaging.ImageCodecInfo]::GetImageEncoders() | Where-Object { $_.MimeType -eq "image/jpeg" }
                    $encoderParams = New-Object System.Drawing.Imaging.EncoderParameters(1)
                    $encoderParam = New-Object System.Drawing.Imaging.EncoderParameter([System.Drawing.Imaging.Encoder]::Quality, $quality)
                    $encoderParams.Param[0] = $encoderParam
                    $newImage.Save($saveDialog.FileName, $encoder, $encoderParams)
                }
                elseif ($extension -eq ".png") {
                    $newImage.Save($saveDialog.FileName, [System.Drawing.Imaging.ImageFormat]::Png)
                }
                elseif ($extension -eq ".bmp") {
                    $newImage.Save($saveDialog.FileName, [System.Drawing.Imaging.ImageFormat]::Bmp)
                }
                
                # הצגת הודעת סיום
                $newFileSize = Get-FileSizeInMB $saveDialog.FileName
                $originalFileSize = Get-FileSizeInMB $global:originalFilePath
                $savings = [math]::Round(100 * (1 - $newFileSize / $originalFileSize), 1)
                
                # קבלת מידות בסנטימטרים לדוח
                $dpi = [int]::Parse($comboDpi.SelectedItem)
                $widthCm = ConvertPixelsToCm -pixels $width -dpi $dpi
                $heightCm = ConvertPixelsToCm -pixels $height -dpi $dpi
                
                [System.Windows.Forms.MessageBox]::Show(
                    "התמונה נשמרה כ-" + $saveDialog.FileName + 
                    "`n`nגודל מקורי: " + $originalFileSize + " MB" +
                    "`nגודל חדש: " + $newFileSize + " MB" +
                    "`nחיסכון: " + $savings + "%" +
                    "`n`nמידות בפיקסלים: " + $width + " x " + $height + 
                    "`nמידות בס״מ: " + $widthCm + " x " + $heightCm + " (ב-" + $dpi + " DPI)", 
                    "פעולה הושלמה", [System.Windows.Forms.MessageBoxButtons]::OK, [System.Windows.Forms.MessageBoxIcon]::Information)
                
                # שחרור משאבים
                $newImage.Dispose()
            }
            catch {
                [System.Windows.Forms.MessageBox]::Show("שגיאה בשמירת הקובץ: " + $_.Exception.Message, "שגיאה", [System.Windows.Forms.MessageBoxButtons]::OK, [System.Windows.Forms.MessageBoxIcon]::Error)
            }
        }
    }
    else {
        [System.Windows.Forms.MessageBox]::Show("נא להזין ערכי רוחב וגובה תקינים", "שגיאה", [System.Windows.Forms.MessageBoxButtons]::OK, [System.Windows.Forms.MessageBoxIcon]::Error)
    }
})


# סיום סשן
$form.add_FormClosed({
    if ($global:currentImage) {
        $global:currentImage.Dispose()
    }
})

# הצגת הטופס
$form.ShowDialog()
